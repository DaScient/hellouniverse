{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[],"dockerImageVersionId":30786,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/dascient/fear-greed-ind3x?scriptVersionId=205748502\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\n!pip install yfinance --upgrade --no-cache-dir\n!pip install plotly\n!pip install pykalman\n!pip install pandas_ta\n\nfrom IPython.display import clear_output\nimport plotly.graph_objects as go\nimport warnings,time,ast\nfrom pykalman import KalmanFilter\nimport plotly.graph_objects as go\nwarnings.filterwarnings('ignore')\nimport matplotlib.pyplot as plt\nfrom dateutil.tz import tzlocal\nfrom rich import print, pretty\nfrom datetime import datetime\nfrom random import randint\nfrom random import seed\nimport pandas_ta as ta\nimport yfinance as yf\nimport pandas as pd\nimport numpy as np\nimport lxml.html\nimport requests\nimport os\n\nclear_output()\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2024-11-07T09:39:12.304953Z","iopub.execute_input":"2024-11-07T09:39:12.30538Z","iopub.status.idle":"2024-11-07T09:39:58.129468Z","shell.execute_reply.started":"2024-11-07T09:39:12.305341Z","shell.execute_reply":"2024-11-07T09:39:58.128335Z"},"_kg_hide-input":true},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"# Are you afraid of the dark?","metadata":{}},{"cell_type":"code","source":"!pip install fear-and-greed\n!pip install dash\nclear_output()\n\nimport fear_and_greed\n#type(fear_and_greed.get())\n\nprint('\\nIndex: ',fear_and_greed.get()[0])\nprint('Range: ',fear_and_greed.get()[1])\nprint('Datetime: ',fear_and_greed.get()[2])","metadata":{"trusted":true,"_kg_hide-input":true,"execution":{"iopub.status.busy":"2024-11-07T09:39:58.132237Z","iopub.execute_input":"2024-11-07T09:39:58.133152Z","iopub.status.idle":"2024-11-07T09:40:21.24183Z","shell.execute_reply.started":"2024-11-07T09:39:58.133108Z","shell.execute_reply":"2024-11-07T09:40:21.240707Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"import plotly.graph_objects as go\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\n\nfig = go.Figure(go.Indicator(\n    mode = \"gauge+number\",\n    value = 270,\n    domain = {'x': [0, 1], 'y': [0, 1]},\n    title = {'text': \"Speed\"}))\n\nfig.show()","metadata":{"trusted":true,"_kg_hide-input":true,"execution":{"iopub.status.busy":"2024-11-07T09:45:06.622999Z","iopub.execute_input":"2024-11-07T09:45:06.623457Z","iopub.status.idle":"2024-11-07T09:45:06.637204Z","shell.execute_reply.started":"2024-11-07T09:45:06.623412Z","shell.execute_reply":"2024-11-07T09:45:06.636148Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"import plotly.express as px\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\ninit_notebook_mode(connected=True) \n\ndf = px.data.stocks()\nfig = px.line(df, x=\"date\", y=df.columns,\n              hover_data={\"date\": \"|%B %d, %Y\"},\n              title='custom tick labels')\nfig.update_xaxes(\n    dtick=\"M1\",\n    tickformat=\"%b\\n%Y\")\nfig.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-07T09:41:57.971896Z","iopub.execute_input":"2024-11-07T09:41:57.972304Z","iopub.status.idle":"2024-11-07T09:41:58.067051Z","shell.execute_reply.started":"2024-11-07T09:41:57.972267Z","shell.execute_reply":"2024-11-07T09:41:58.066011Z"},"_kg_hide-input":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"import plotly.graph_objects as go\n\nimport pandas as pd\nfrom datetime import datetime\n\ndf = pd.read_csv('https://raw.githubusercontent.com/plotly/datasets/master/finance-charts-apple.csv')\n\nfig = go.Figure(data=[go.Candlestick(x=df['Date'],\n                open=df['AAPL.Open'],\n                high=df['AAPL.High'],\n                low=df['AAPL.Low'],\n                close=df['AAPL.Close'])])\n\nfig.show()","metadata":{"trusted":true,"_kg_hide-input":true,"execution":{"iopub.status.busy":"2024-11-07T09:40:23.55315Z","iopub.execute_input":"2024-11-07T09:40:23.553516Z","iopub.status.idle":"2024-11-07T09:40:24.097209Z","shell.execute_reply.started":"2024-11-07T09:40:23.553477Z","shell.execute_reply":"2024-11-07T09:40:24.096143Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# en fin","metadata":{"trusted":true,"_kg_hide-input":false},"outputs":[],"execution_count":null}]}