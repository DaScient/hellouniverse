{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"# Because why naught?\n### By\\ΔΦ.","metadata":{}},{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"_kg_hide-input":true,"execution":{"iopub.status.busy":"2025-01-04T20:47:53.883589Z","iopub.execute_input":"2025-01-04T20:47:53.883961Z","iopub.status.idle":"2025-01-04T20:47:53.902902Z","shell.execute_reply.started":"2025-01-04T20:47:53.883922Z","shell.execute_reply":"2025-01-04T20:47:53.900974Z"}},"outputs":[{"name":"stdout","text":"It's not the first of the month.\n","output_type":"stream"}],"execution_count":2},{"cell_type":"code","source":"from IPython.display import clear_output\n!pip install schedule\n!pip install config\nclear_output()\nimport numpy as np\nimport pandas as pd\nimport schedule,warnings,time,ast,config,sys,random,smtplib,datetime\nclear_output()\nCARRIERS = {\"att\": \"@mms.att.net\",\"tmobile\": \"@tmomail.net\",\"verizon\": \"@vtext.com\",\"sprint\": \"@messaging.sprintpcs.com\"}\nEMAIL = \"aristocles24@gmail.com\"\nPASSWORD = \"odxx ontt dgbz nabo\"\ndef send_message(phone_number, carrier, message):\n    recipient = phone_number + CARRIERS[carrier]\n    auth = (EMAIL, PASSWORD)\n    server = smtplib.SMTP(\"smtp.gmail.com\", 587)\n    server.starttls()\n    server.login(auth[0], auth[1])\n    server.sendmail(auth[0], recipient, message)\ndef wake_up_wake_up():\n    print(\"\\nWhoisJohnGalt?\")#‭(\n    send_message(\"3016750611\",\"tmobile\",f\"Dn\\nIt's\\tthe,\\tit's\\tthe\\t1st\\tof\\tDa\\tMonth!\\n\\nhttps://youtu.be/PArF9k2SbQk\")\n    send_message(\"5033080241‬\",\"verizon\",f\"SnnyIt's\\tthe,\\tit's\\tthe\\t1st\\tof\\tDa\\tMonth!\\n\\nhttps://youtu.be/PArF9k2SbQk\")\n    send_message(\"6235239525‬\",\"verizon\",f\"MufFknMrcs\\nIt's\\tthe,\\nit's\\tthe\\t1st\\tof\\tDa\\tMonth!\\n\\nhttps://youtu.be/PArF9k2SbQk\")\n    send_message(\"6233411631\",\"verizon\",f\"Erůh!\\tDr.SlowGlen,\\tIt's\\tthe,\\nit's\\nthe\\t1st\\tof\\tDa\\tMonth!\\n\\nhttps://youtu.be/PArF9k2SbQk\")\n    send_message(\"2094017054‬\",\"tmobile\",f\"Dyl!\\tDr.SlowGlen,\\tIt's\\tthe,\\nit's\\nthe\\t1st\\tof\\tDa\\tMonth!\\n\\nhttps://youtu.be/PArF9k2SbQk\")\n    send_message(\"4808431846‬\",\"verizon\",f\"Dr.SlowGlen,\\tIt's\\tthe,\\nit's\\nthe\\t1st\\tof\\tDa\\tMonth!\\n\\nhttps://youtu.be/PArF9k2SbQk\")\n    send_message(\"6026282900‬\",\"tmobile\",f\"Hey te!\\nIt's\\tthe,\\tit's\\tthe\\t1st\\tof\\tDa\\tMonth!\\n\\nhttps://youtu.be/PArF9k2SbQk\")\ndef is_first_of_month():\n    today = datetime.date.today()\n    return today.day != 1\nif is_first_of_month():\n    wake_up_wake_up()\nelse:\n    wake_up_wake_up()\n    print(\"It's not the first of the month.\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-04T21:18:31.490176Z","iopub.execute_input":"2025-01-04T21:18:31.490676Z","iopub.status.idle":"2025-01-04T21:18:40.460596Z","shell.execute_reply.started":"2025-01-04T21:18:31.490643Z","shell.execute_reply":"2025-01-04T21:18:40.458642Z"}},"outputs":[{"name":"stdout","text":"\nWhoisJohnGalt?\n","output_type":"stream"},{"traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mUnicodeEncodeError\u001b[0m                        Traceback (most recent call last)","\u001b[0;32m<ipython-input-10-be504bf4f132>\u001b[0m in \u001b[0;36m<cell line: 31>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     30\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0mtoday\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mday\u001b[0m \u001b[0;34m!=\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     31\u001b[0m \u001b[0;32mif\u001b[0m \u001b[0mis_first_of_month\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 32\u001b[0;31m     \u001b[0mwake_up_wake_up\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     33\u001b[0m \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     34\u001b[0m     \u001b[0mwake_up_wake_up\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m<ipython-input-10-be504bf4f132>\u001b[0m in \u001b[0;36mwake_up_wake_up\u001b[0;34m()\u001b[0m\n\u001b[1;32m     20\u001b[0m     \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"\\nWhoisJohnGalt?\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;31m#‭(\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     21\u001b[0m     \u001b[0msend_message\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"3016750611\"\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\"tmobile\"\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34mf\"Dn\\nIt's\\tthe,\\tit's\\tthe\\t1st\\tof\\tDa\\tMonth!\\n\\nhttps://youtu.be/PArF9k2SbQk\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 22\u001b[0;31m     \u001b[0msend_message\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"5033080241‬\"\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\"verizon\"\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34mf\"SnnyIt's\\tthe,\\tit's\\tthe\\t1st\\tof\\tDa\\tMonth!\\n\\nhttps://youtu.be/PArF9k2SbQk\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     23\u001b[0m     \u001b[0msend_message\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"6235239525‬\"\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\"verizon\"\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34mf\"MufFknMrcs\\nIt's\\tthe,\\nit's\\tthe\\t1st\\tof\\tDa\\tMonth!\\n\\nhttps://youtu.be/PArF9k2SbQk\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     24\u001b[0m     \u001b[0msend_message\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"6233411631\"\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\"verizon\"\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34mf\"Erůh!\\tDr.SlowGlen,\\tIt's\\tthe,\\nit's\\nthe\\t1st\\tof\\tDa\\tMonth!\\n\\nhttps://youtu.be/PArF9k2SbQk\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m<ipython-input-10-be504bf4f132>\u001b[0m in \u001b[0;36msend_message\u001b[0;34m(phone_number, carrier, message)\u001b[0m\n\u001b[1;32m     16\u001b[0m     \u001b[0mserver\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstarttls\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     17\u001b[0m     \u001b[0mserver\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlogin\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mauth\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mauth\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 18\u001b[0;31m     \u001b[0mserver\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msendmail\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mauth\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mrecipient\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmessage\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     19\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0mwake_up_wake_up\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     20\u001b[0m     \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"\\nWhoisJohnGalt?\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;31m#‭(\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/lib/python3.10/smtplib.py\u001b[0m in \u001b[0;36msendmail\u001b[0;34m(self, from_addr, to_addrs, msg, mail_options, rcpt_options)\u001b[0m\n\u001b[1;32m    890\u001b[0m             \u001b[0mto_addrs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mto_addrs\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    891\u001b[0m         \u001b[0;32mfor\u001b[0m \u001b[0meach\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mto_addrs\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 892\u001b[0;31m             \u001b[0;34m(\u001b[0m\u001b[0mcode\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mresp\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrcpt\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0meach\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mrcpt_options\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    893\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mcode\u001b[0m \u001b[0;34m!=\u001b[0m \u001b[0;36m250\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mcode\u001b[0m \u001b[0;34m!=\u001b[0m \u001b[0;36m251\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    894\u001b[0m                 \u001b[0msenderrs\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0meach\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mcode\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mresp\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/lib/python3.10/smtplib.py\u001b[0m in \u001b[0;36mrcpt\u001b[0;34m(self, recip, options)\u001b[0m\n\u001b[1;32m    551\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0moptions\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdoes_esmtp\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    552\u001b[0m             \u001b[0moptionlist\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m' '\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;34m' '\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mjoin\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0moptions\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 553\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mputcmd\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"rcpt\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"TO:%s%s\"\u001b[0m \u001b[0;34m%\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mquoteaddr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mrecip\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0moptionlist\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    554\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgetreply\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    555\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/lib/python3.10/smtplib.py\u001b[0m in \u001b[0;36mputcmd\u001b[0;34m(self, cmd, args)\u001b[0m\n\u001b[1;32m    376\u001b[0m                 \u001b[0;34mf'command and arguments contain prohibited newline characters: {s}'\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    377\u001b[0m             )\n\u001b[0;32m--> 378\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mf'{s}{CRLF}'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    379\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    380\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mgetreply\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/lib/python3.10/smtplib.py\u001b[0m in \u001b[0;36msend\u001b[0;34m(self, s)\u001b[0m\n\u001b[1;32m    355\u001b[0m                 \u001b[0;31m# should not be used, but 'data' needs to convert the string to\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    356\u001b[0m                 \u001b[0;31m# binary itself anyway, so that's not a problem.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 357\u001b[0;31m                 \u001b[0ms\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0ms\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mencode\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcommand_encoding\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    358\u001b[0m             \u001b[0msys\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0maudit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"smtplib.send\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0ms\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    359\u001b[0m             \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mUnicodeEncodeError\u001b[0m: 'ascii' codec can't encode character '\\u202c' in position 19: ordinal not in range(128)"],"ename":"UnicodeEncodeError","evalue":"'ascii' codec can't encode character '\\u202c' in position 19: ordinal not in range(128)","output_type":"error"}],"execution_count":10},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null}]}