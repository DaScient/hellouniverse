{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"pygments_lexer":"ipython3","nbconvert_exporter":"python","version":"3.6.4","file_extension":".py","codemirror_mode":{"name":"ipython","version":3},"name":"python","mimetype":"text/x-python"},"kaggle":{"accelerator":"none","dataSources":[],"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/dascient/my-beating-heart?scriptVersionId=217151344\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"code","source":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Dynamic Matrix Anatomical Heart Effect</title>\n  <style>\n    body {\n      margin: 0;\n      overflow: hidden;\n      background-color: #000000; /* Pure black */\n    }\n    canvas {\n      display: block;\n    }\n  </style>\n</head>\n<body>\n  <canvas id=\"matrix-canvas\"></canvas>\n  <script>\n    document.addEventListener('DOMContentLoaded', function () {\n      const canvas = document.getElementById('matrix-canvas');\n      const context = canvas.getContext('2d');\n\n      // Set canvas dimensions\n      canvas.width = 999;\n      canvas.height = 999;\n\n      // Matrix characters\n      const matrixChars = 'ا خیلیð मिर्जादा, अहं भवन्तं बहु प्रेम करोमि :  دوست دارم : 米尔扎达我非常爱你 : МИРЗАДА, ОБИЧАМ  : מירזאדה, אני אוהב אותך כל כך : KØÇAM CIĘ BÂRÐZO : ĘMEƔKĖM ⴰⵟⴰⵙ : মির্জাদা, আমি তোমাকে অনেক ভালোবাসি : Miřżädå : ⍟ ⍝ ⌬ ⎔ ⍜ ⚗ ☿ ✶ ⍲ ⍳ ⚛ ⏣ ♆ ☉ ☽ ♅ ⚔ ☢ ♁ ⎊ ⍝ 𓂀 𓃭 𓆏 𓉔';\n      const fontSize = 10; // Font size for matrix characters\n      const columns = Math.floor(canvas.width / fontSize);\n      const drops = Array(columns).fill(1);\n\n      // Function to generate a random color\n      function getRandomColor() {\n        const r = Math.floor(Math.random() * 256);\n        const g = Math.floor(Math.random() * 256);\n        const b = Math.floor(Math.random() * 256);\n        return `rgb(${r},${g},${b})`;\n      }\n\n      // Function to draw an anatomical heart shape\n      function drawHeart() {\n        context.save();\n        context.translate(canvas.width / 2, canvas.height / 2 + 50);\n        context.beginPath();\n\n        // Base of the heart\n        context.moveTo(0, 0);\n        context.bezierCurveTo(-100, -200, -200, 100, 0, 250); // Left side\n        context.bezierCurveTo(200, 100, 100, -200, 0, 0); // Right side\n\n        // Arteries and veins\n        context.moveTo(-60, -100);\n        context.bezierCurveTo(-100, -300, -200, -200, -100, -50);\n        context.moveTo(60, -100);\n        context.bezierCurveTo(100, -300, 200, -200, 100, -50);\n\n        context.closePath();\n        context.clip();\n        context.restore();\n      }\n\n      function drawMatrix() {\n        context.fillStyle = 'rgba(0, 0, 0, 0.05)'; // Translucent background for trailing effect\n        context.fillRect(0, 0, canvas.width, canvas.height);\n        context.font = `${fontSize}px monospace`;\n\n        drops.forEach((y, x) => {\n          const text = matrixChars.charAt(Math.floor(Math.random() * matrixChars.length));\n          const posX = x * fontSize;\n          const posY = y * fontSize;\n\n          if (context.isPointInPath(posX, posY)) {\n            context.fillStyle = getRandomColor(); // Bright color inside heart\n          } else {\n            context.fillStyle = `rgba(0, 255, 0, 0.75)`; // Green color outside heart\n          }\n\n          context.fillText(text, posX, posY);\n\n          // Reset drop to the top randomly\n          if (posY > canvas.height && Math.random() > 0.975) {\n            drops[x] = 0;\n          }\n          drops[x]++;\n        });\n      }\n\n      drawHeart(); // Clip the heart shape\n      setInterval(drawMatrix, 50); // Faster animation\n\n      window.addEventListener('resize', () => {\n        canvas.width = window.innerWidth;\n        canvas.height = window.innerHeight;\n        drops.length = Math.floor(canvas.width / fontSize);\n        drops.fill(1);\n        drawHeart(); // Redraw heart shape on resize\n      });\n    });\n  </script>\n</body>\n</html>\n","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true},"outputs":[],"execution_count":null}]}