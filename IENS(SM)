{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/dascient/iens-sm?scriptVersionId=218052323\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"markdown","source":"# IENS℠ - Integrated Emergency Notification System\n### Send notifications to your family, friends, & neighbors. By submitting this form, you agree to have AI-Integrated notifications & alerts will be sent to the recipients listed below via SMS, or email.","metadata":{}},{"cell_type":"code","source":"import smtplib\nfrom email.mime.text import MIMEText\nfrom email.mime.multipart import MIMEMultipart\n\ndef send_email_notification(recipient_email, subject, message):\n    \"\"\"\n    Send an email notification to a recipient.\n\n    :param recipient_email: str - The recipient's email address.\n    :param subject: str - The subject of the email.\n    :param message: str - The body of the email.\n    \"\"\"\n    # Configuration\n    sender_email = \"your_email@example.com\"  # Replace with your email\n    sender_password = \"your_password\"       # Replace with your password\n    smtp_server = \"smtp.gmail.com\"           # Replace with your SMTP server\n    smtp_port = 587                           # SMTP server port\n\n    try:\n        # Create the email\n        msg = MIMEMultipart()\n        msg['From'] = sender_email\n        msg['To'] = recipient_email\n        msg['Subject'] = subject\n        msg.attach(MIMEText(message, 'plain'))\n\n        # Connect to the SMTP server and send the email\n        with smtplib.SMTP(smtp_server, smtp_port) as server:\n            server.starttls()\n            server.login(sender_email, sender_password)\n            server.sendmail(sender_email, recipient_email, msg.as_string())\n\n        print(f\"Email sent to {recipient_email}\")\n\n    except Exception as e:\n        print(f\"Failed to send email to {recipient_email}: {e}\")\n\n\ndef send_sms_notification(recipient_phone, carrier_gateway, message):\n    \"\"\"\n    Send an SMS notification to a recipient via email-to-SMS gateway.\n\n    :param recipient_phone: str - The recipient's phone number.\n    :param carrier_gateway: str - The carrier's SMS gateway domain.\n    :param message: str - The SMS message body.\n    \"\"\"\n    recipient_email = f\"{recipient_phone}@{carrier_gateway}\"\n    send_email_notification(recipient_email, \"\", message)\n\n\ndef main():\n    \"\"\"\n    Main function to demonstrate the IENS℠ notification system.\n    \"\"\"\n    print(\"Welcome to DASCIENT, LLC's IENS℠ - Integrated Emergency Notification System\")\n    print(\"\\n--- Example Notification Process ---\\n\")\n\n    # Example recipients\n    recipients = [\n        {\n            \"type\": \"email\",\n            \"address\": \"family_member@example.com\",\n            \"subject\": \"Emergency Alert\",\n            \"message\": \"This is a test notification for the Integrated Emergency Notification System.\"\n        },\n        {\n            \"type\": \"sms\",\n            \"phone\": \"1234567890\",\n            \"carrier_gateway\": \"txt.att.net\",  # Example: AT&T SMS gateway\n            \"message\": \"Emergency Alert: This is a test SMS notification.\"\n        }\n    ]\n\n    # Send notifications\n    for recipient in recipients:\n        if recipient['type'] == 'email':\n            send_email_notification(\n                recipient_email=recipient['address'],\n                subject=recipient['subject'],\n                message=recipient['message']\n            )\n        elif recipient['type'] == 'sms':\n            send_sms_notification(\n                recipient_phone=recipient['phone'],\n                carrier_gateway=recipient['carrier_gateway'],\n                message=recipient['message']\n            )\n\n    print(\"\\nAll notifications have been processed.\")\n\n\nif __name__ == \"__main__\":\n    main()\n","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true},"outputs":[],"execution_count":null}]}