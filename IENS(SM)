{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/dascient/iens-sm?scriptVersionId=218053363\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"markdown","source":"# IENSâ„  - Integrated Emergency Notification System\n### Send notifications to your family, friends, & neighbors. By submitting this form, you agree to have AI-Integrated notifications & alerts will be sent to the recipients listed below via SMS, or email.","metadata":{}},{"cell_type":"code","source":"import smtplib\nfrom email.mime.text import MIMEText\nimport pandas as pd\nfrom geopy.distance import geodesic\nimport requests\n\n# Google Sheets Integration Configuration\nGOOGLE_SHEET_URL = \"https://docs.google.com/spreadsheets/d/<YOUR_SPREADSHEET_ID>/export?format=csv\"\n\n# Load Data from Google Sheets\ndef load_google_sheet_data():\n    try:\n        data = pd.read_csv(GOOGLE_SHEET_URL)\n        return data\n    except Exception as e:\n        print(f\"Error loading Google Sheet: {e}\")\n        return None\n\n# Dangerous Zone Data (Example Coordinates for Evacuation Zones)\ndanger_zones = [\n    {\"name\": \"Zone 1\", \"coordinates\": (34.0522, -118.2437), \"severity\": 9},  # Example: Los Angeles\n    {\"name\": \"Zone 2\", \"coordinates\": (36.7783, -119.4179), \"severity\": 7},  # Example: California Central\n    {\"name\": \"Zone 3\", \"coordinates\": (37.7749, -122.4194), \"severity\": 8},  # Example: San Francisco\n]\n\n# Calculate Distance and Prioritize Recipients\ndef rank_recipients(data):\n    recipient_list = []\n    for _, row in data.iterrows():\n        person = {\n            \"name\": row.get(\"Name\"),\n            \"mobile\": row.get(\"Mobile\"),\n            \"email\": row.get(\"Email\"),\n            \"location\": (row.get(\"Latitude\"), row.get(\"Longitude\"))\n        }\n        # Calculate danger scores\n        danger_scores = []\n        for zone in danger_zones:\n            distance = geodesic(person[\"location\"], zone[\"coordinates\"]).km\n            danger_score = zone[\"severity\"] / (distance + 1)  # Higher severity and closer distance increase priority\n            danger_scores.append(danger_score)\n\n        person[\"danger_score\"] = max(danger_scores)\n        recipient_list.append(person)\n\n    # Sort by highest danger score\n    recipient_list = sorted(recipient_list, key=lambda x: x[\"danger_score\"], reverse=True)\n    return recipient_list\n\n# Email and SMS Notification\nEMAIL_SENDER = \"your_email@example.com\"\nEMAIL_PASSWORD = \"your_password\"\nSMTP_SERVER = \"smtp.gmail.com\"\nSMTP_PORT = 587\n\ndef send_notifications(recipients):\n    try:\n        with smtplib.SMTP(SMTP_SERVER, SMTP_PORT) as server:\n            server.starttls()\n            server.login(EMAIL_SENDER, EMAIL_PASSWORD)\n\n            for recipient in recipients:\n                message = f\"Hello {recipient['name']},\\n\\nYou are in proximity to a danger zone. Please evacuate or take necessary precautions immediately.\\n\"\n                msg = MIMEText(message)\n                msg[\"From\"] = EMAIL_SENDER\n                msg[\"To\"] = recipient[\"email\"]\n                msg[\"Subject\"] = \"URGENT: Evacuation Alert\"\n\n                # Send email\n                server.sendmail(EMAIL_SENDER, recipient[\"email\"], msg.as_string())\n\n                # Send SMS via email-to-SMS gateway (Example for AT&T)\n                if recipient[\"mobile\"]:\n                    sms_gateway = f\"{recipient['mobile']}@txt.att.net\"  # Update for specific carrier\n                    server.sendmail(EMAIL_SENDER, sms_gateway, msg.as_string())\n\n                print(f\"Notification sent to {recipient['name']}\")\n\n    except Exception as e:\n        print(f\"Error sending notifications: {e}\")\n\nif __name__ == \"__main__\":\n    # Load data from Google Sheets\n    data = load_google_sheet_data()\n\n    if data is not None:\n        # Rank recipients based on danger and proximity\n        ranked_recipients = rank_recipients(data)\n\n        # Send notifications to ranked recipients\n        send_notifications(ranked_recipients)","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true},"outputs":[],"execution_count":null}]}